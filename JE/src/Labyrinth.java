package src;

public class Labyrinth {
    public static Labyrinth currenLabyrinth;
    private static int[][] m_Besetzung = {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};/*{
            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1 },
            { 1, 3, 0, 3, 3, 3, 3, 0, 3, 0, 0, 3, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 1 },
            { 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 4, 1, 1, 1, 0, 3, 1, 3, 0, 0, 0, 1 },
            { 1, 4, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 3, 3, 0, 1, 0, 1, 1, 0, 1 },
            { 0, 3, 1, 0, 1, 1, 0, 3, 0, 3, 0, 3, 1, 4, 0, 0, 0, 3, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0 },
            { 1, 0, 1, 0, 3, 0, 3, 3, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 3, 0, 1 },
            { 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 3, 1, 3, 0, 0, 0, 3, 3, 0, 3, 0, 1, 0, 0, 3, 0, 0, 0, 1 },
            { 1, 0, 3, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 3, 1 },
            { 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 3, 1, 1, 5, 1, 1, 0, 3, 1, 0, 1, 0, 3, 1, 1, 1, 1, 4, 1 },
            { 1, 3, 0, 0, 3, 0, 1, 1, 3, 0, 3, 0, 1, 0, 0, 0, 1, 0, 0, 1, 3, 0, 0, 1, 1, 0, 0, 0, 0, 1 },
            { 1, 0, 1, 1, 3, 3, 3, 1, 0, 0, 1, 3, 1, 0, 0, 0, 1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 1, 0, 1 },
            { 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 3, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1 },
            { 1, 3, 1, 0, 1, 1, 3, 0, 3, 1, 0, 3, 0, 3, 0, 3, 0, 0, 0, 3, 0, 3, 0, 3, 3, 0, 3, 0, 0, 1 },
            { 1, 3, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 4, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1 },
            { 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 1 },
            { 1, 0, 1, 3, 4, 0, 0, 3, 0, 0, 4, 1, 0, 1, 1, 1, 1, 0, 1, 3, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1 },
            { 1, 3, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 3, 1, 0, 3, 0, 0, 1, 0, 3, 1, 0, 3, 1, 0, 1, 3, 0, 1 },
            { 1, 0, 3, 0, 1, 1, 3, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1 },
            { 1, 4, 0, 3, 0, 3, 0, 3, 0, 3, 4, 3, 0, 3, 0, 3, 0, 0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 1 },
            { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 } };
    */
            public static final int m_height = 20;
    public static final int m_width = 30;

    public Labyrinth() {
        
    }

    public void checkwin() {
        boolean _R = false;
        for (int[] is : m_Besetzung) {
            for (int i : is) {
                if (i == 2 || i == 3) {
                    _R = true;
                }
            }
        }

        Animator.Running = _R;
        if(!_R) System.out.println("Won");

    }

    public void setActive() {
        currenLabyrinth = this;
    }

    public void setBesetzung(int x, int y, int value) {
        m_Besetzung[y][x] = value;
    }

    public int getBesetzung(int x, int y) {
        return m_Besetzung[y][x];
    }
}
